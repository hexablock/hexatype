// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

/*
Package hexatype is a generated protocol buffer package.

It is generated from these files:
	types.proto

It has these top-level messages:
	Entry
	UnsafeKeylogIndex
	ReqResp
	RequestOptions
*/
package hexatype

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import hexaring "github.com/hexablock/hexaring"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Hexalog entry
type Entry struct {
	Previous  []byte `protobuf:"bytes,1,opt,name=Previous,proto3" json:"Previous,omitempty"`
	Timestamp uint64 `protobuf:"varint,2,opt,name=Timestamp" json:"Timestamp,omitempty"`
	Height    uint32 `protobuf:"varint,3,opt,name=Height" json:"Height,omitempty"`
	Key       []byte `protobuf:"bytes,4,opt,name=Key,proto3" json:"Key,omitempty"`
	Data      []byte `protobuf:"bytes,5,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *Entry) Reset()                    { *m = Entry{} }
func (m *Entry) String() string            { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()               {}
func (*Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Entry) GetPrevious() []byte {
	if m != nil {
		return m.Previous
	}
	return nil
}

func (m *Entry) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Entry) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Entry) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Entry) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type UnsafeKeylogIndex struct {
	Key     []byte   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Height  uint32   `protobuf:"varint,2,opt,name=Height" json:"Height,omitempty"`
	Marker  []byte   `protobuf:"bytes,3,opt,name=Marker,proto3" json:"Marker,omitempty"`
	Entries [][]byte `protobuf:"bytes,4,rep,name=Entries,proto3" json:"Entries,omitempty"`
}

func (m *UnsafeKeylogIndex) Reset()                    { *m = UnsafeKeylogIndex{} }
func (m *UnsafeKeylogIndex) String() string            { return proto.CompactTextString(m) }
func (*UnsafeKeylogIndex) ProtoMessage()               {}
func (*UnsafeKeylogIndex) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UnsafeKeylogIndex) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *UnsafeKeylogIndex) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *UnsafeKeylogIndex) GetMarker() []byte {
	if m != nil {
		return m.Marker
	}
	return nil
}

func (m *UnsafeKeylogIndex) GetEntries() [][]byte {
	if m != nil {
		return m.Entries
	}
	return nil
}

// Request and response shared structure for hexalog
type ReqResp struct {
	// ID is based on the request/response
	ID      []byte          `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Entry   *Entry          `protobuf:"bytes,2,opt,name=Entry" json:"Entry,omitempty"`
	Options *RequestOptions `protobuf:"bytes,3,opt,name=Options" json:"Options,omitempty"`
}

func (m *ReqResp) Reset()                    { *m = ReqResp{} }
func (m *ReqResp) String() string            { return proto.CompactTextString(m) }
func (*ReqResp) ProtoMessage()               {}
func (*ReqResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReqResp) GetID() []byte {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *ReqResp) GetEntry() *Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *ReqResp) GetOptions() *RequestOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

// Hexalog request options
type RequestOptions struct {
	// Index of the source in the PeerSet.  This is set internally by the log
	SourceIndex int32 `protobuf:"varint,1,opt,name=SourceIndex" json:"SourceIndex,omitempty"`
	// Set of peers for the request.
	PeerSet []*hexaring.Location `protobuf:"bytes,2,rep,name=PeerSet" json:"PeerSet,omitempty"`
	// Number of times to retry for a given request
	Retries int32 `protobuf:"varint,3,opt,name=Retries" json:"Retries,omitempty"`
	// Retry interval for entry proposals
	RetryInterval int32 `protobuf:"varint,4,opt,name=RetryInterval" json:"RetryInterval,omitempty"`
	// Wait on ballot before returning
	WaitBallot bool `protobuf:"varint,5,opt,name=WaitBallot" json:"WaitBallot,omitempty"`
	// Wait for fsm to apply entry after ballot is closed. This should take
	// effect only if WaitBallot is also true
	WaitApply bool `protobuf:"varint,6,opt,name=WaitApply" json:"WaitApply,omitempty"`
	// Apply timeout in ms.  This only takes effect if WaitApply is also set
	WaitApplyTimeout int32 `protobuf:"varint,7,opt,name=WaitApplyTimeout" json:"WaitApplyTimeout,omitempty"`
}

func (m *RequestOptions) Reset()                    { *m = RequestOptions{} }
func (m *RequestOptions) String() string            { return proto.CompactTextString(m) }
func (*RequestOptions) ProtoMessage()               {}
func (*RequestOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RequestOptions) GetSourceIndex() int32 {
	if m != nil {
		return m.SourceIndex
	}
	return 0
}

func (m *RequestOptions) GetPeerSet() []*hexaring.Location {
	if m != nil {
		return m.PeerSet
	}
	return nil
}

func (m *RequestOptions) GetRetries() int32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

func (m *RequestOptions) GetRetryInterval() int32 {
	if m != nil {
		return m.RetryInterval
	}
	return 0
}

func (m *RequestOptions) GetWaitBallot() bool {
	if m != nil {
		return m.WaitBallot
	}
	return false
}

func (m *RequestOptions) GetWaitApply() bool {
	if m != nil {
		return m.WaitApply
	}
	return false
}

func (m *RequestOptions) GetWaitApplyTimeout() int32 {
	if m != nil {
		return m.WaitApplyTimeout
	}
	return 0
}

func init() {
	proto.RegisterType((*Entry)(nil), "hexatype.Entry")
	proto.RegisterType((*UnsafeKeylogIndex)(nil), "hexatype.UnsafeKeylogIndex")
	proto.RegisterType((*ReqResp)(nil), "hexatype.ReqResp")
	proto.RegisterType((*RequestOptions)(nil), "hexatype.RequestOptions")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 417 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0x51, 0x6f, 0xd3, 0x30,
	0x10, 0x56, 0x92, 0xb6, 0x29, 0x97, 0x6e, 0x0c, 0x3f, 0x4c, 0xd6, 0x84, 0x50, 0x54, 0x81, 0x14,
	0x01, 0xca, 0xa4, 0xf2, 0x0b, 0x40, 0x45, 0xa2, 0x1a, 0x88, 0xc9, 0x03, 0xf1, 0xec, 0x86, 0x23,
	0xb5, 0x96, 0xc6, 0x99, 0xed, 0x4c, 0xcb, 0x13, 0xef, 0xfc, 0x6a, 0xe4, 0x23, 0x59, 0x5a, 0xf1,
	0x76, 0xdf, 0xe7, 0xbb, 0xfb, 0xfc, 0xdd, 0x1d, 0x24, 0xae, 0x6b, 0xd0, 0xe6, 0x8d, 0xd1, 0x4e,
	0xb3, 0xf9, 0x0e, 0x1f, 0xa4, 0x27, 0x2e, 0xde, 0x94, 0xca, 0xed, 0xda, 0x6d, 0x5e, 0xe8, 0xfd,
	0xa5, 0x27, 0xb7, 0x95, 0x2e, 0x6e, 0x29, 0x32, 0xaa, 0x2e, 0x2f, 0xad, 0x33, 0x6d, 0xe1, 0xfa,
	0xb2, 0xe5, 0x6f, 0x98, 0x7e, 0xac, 0x9d, 0xe9, 0xd8, 0x05, 0xcc, 0xaf, 0x0d, 0xde, 0x2b, 0xdd,
	0x5a, 0x1e, 0xa4, 0x41, 0xb6, 0x10, 0x8f, 0x98, 0x3d, 0x87, 0x27, 0xdf, 0xd4, 0x1e, 0xad, 0x93,
	0xfb, 0x86, 0x87, 0x69, 0x90, 0x4d, 0xc4, 0x48, 0xb0, 0x73, 0x98, 0x7d, 0x42, 0x55, 0xee, 0x1c,
	0x8f, 0xd2, 0x20, 0x3b, 0x11, 0x3d, 0x62, 0x67, 0x10, 0x5d, 0x61, 0xc7, 0x27, 0xd4, 0xcc, 0x87,
	0x8c, 0xc1, 0x64, 0x2d, 0x9d, 0xe4, 0x53, 0xa2, 0x28, 0x5e, 0x6a, 0x78, 0xf6, 0xbd, 0xb6, 0xf2,
	0x17, 0x5e, 0x61, 0x57, 0xe9, 0x72, 0x53, 0xff, 0xc4, 0x87, 0xa1, 0x34, 0x18, 0x4b, 0x47, 0x91,
	0xf0, 0x48, 0xe4, 0x1c, 0x66, 0x5f, 0xa4, 0xb9, 0x45, 0x43, 0xe2, 0x0b, 0xd1, 0x23, 0xc6, 0x21,
	0xf6, 0xbe, 0x14, 0x5a, 0x3e, 0x49, 0xa3, 0x6c, 0x21, 0x06, 0xb8, 0x74, 0x10, 0x0b, 0xbc, 0x13,
	0x68, 0x1b, 0x76, 0x0a, 0xe1, 0x66, 0xdd, 0xab, 0x84, 0x9b, 0x35, 0x7b, 0xd5, 0x0f, 0x83, 0x34,
	0x92, 0xd5, 0xd3, 0x7c, 0x98, 0x69, 0x4e, 0xb4, 0xe8, 0x47, 0xb5, 0x82, 0xf8, 0x6b, 0xe3, 0x94,
	0xae, 0x2d, 0x89, 0x26, 0x2b, 0x3e, 0x26, 0x0a, 0xbc, 0x6b, 0xd1, 0xba, 0xfe, 0x5d, 0x0c, 0x89,
	0xcb, 0x3f, 0x21, 0x9c, 0x1e, 0xbf, 0xb1, 0x14, 0x92, 0x1b, 0xdd, 0x9a, 0x02, 0xc9, 0x33, 0x7d,
	0x63, 0x2a, 0x0e, 0x29, 0xf6, 0x16, 0xe2, 0x6b, 0x44, 0x73, 0x83, 0xde, 0x75, 0x94, 0x25, 0x2b,
	0x96, 0x0f, 0x6b, 0xcc, 0x3f, 0xeb, 0x42, 0xfa, 0x3e, 0x62, 0x48, 0xf1, 0x96, 0x05, 0xfe, 0xb3,
	0x1c, 0x51, 0xaf, 0x01, 0xb2, 0x97, 0x70, 0xe2, 0xc3, 0x6e, 0x53, 0x3b, 0x34, 0xf7, 0xb2, 0xa2,
	0x9d, 0x4c, 0xc5, 0x31, 0xc9, 0x5e, 0x00, 0xfc, 0x90, 0xca, 0x7d, 0x90, 0x55, 0xa5, 0x1d, 0xed,
	0x68, 0x2e, 0x0e, 0x18, 0x7f, 0x05, 0x1e, 0xbd, 0x6f, 0x9a, 0xaa, 0xe3, 0x33, 0x7a, 0x1e, 0x09,
	0xf6, 0x1a, 0xce, 0x1e, 0x81, 0xbf, 0x0d, 0xdd, 0x3a, 0x1e, 0x93, 0xcc, 0x7f, 0xfc, 0x76, 0x46,
	0xb7, 0xf7, 0xee, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x47, 0x4e, 0xea, 0x85, 0xc1, 0x02, 0x00,
	0x00,
}
