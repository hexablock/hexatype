// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

/*
Package hexatype is a generated protocol buffer package.

It is generated from these files:
	types.proto

It has these top-level messages:
	Entry
	KeylogIndex
	ReqResp
	RequestOptions
*/
package hexatype

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import hexaring "github.com/hexablock/hexaring"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Hexalog entry
type Entry struct {
	Previous  []byte `protobuf:"bytes,1,opt,name=Previous,proto3" json:"Previous,omitempty"`
	Timestamp uint64 `protobuf:"varint,2,opt,name=Timestamp" json:"Timestamp,omitempty"`
	Height    uint32 `protobuf:"varint,3,opt,name=Height" json:"Height,omitempty"`
	Key       []byte `protobuf:"bytes,4,opt,name=Key,proto3" json:"Key,omitempty"`
	Data      []byte `protobuf:"bytes,5,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *Entry) Reset()                    { *m = Entry{} }
func (m *Entry) String() string            { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()               {}
func (*Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Entry) GetPrevious() []byte {
	if m != nil {
		return m.Previous
	}
	return nil
}

func (m *Entry) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Entry) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Entry) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Entry) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type KeylogIndex struct {
	Key     []byte   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Height  uint32   `protobuf:"varint,2,opt,name=Height" json:"Height,omitempty"`
	Marker  []byte   `protobuf:"bytes,3,opt,name=Marker,proto3" json:"Marker,omitempty"`
	Entries [][]byte `protobuf:"bytes,4,rep,name=Entries,proto3" json:"Entries,omitempty"`
}

func (m *KeylogIndex) Reset()                    { *m = KeylogIndex{} }
func (m *KeylogIndex) String() string            { return proto.CompactTextString(m) }
func (*KeylogIndex) ProtoMessage()               {}
func (*KeylogIndex) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *KeylogIndex) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeylogIndex) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *KeylogIndex) GetMarker() []byte {
	if m != nil {
		return m.Marker
	}
	return nil
}

func (m *KeylogIndex) GetEntries() [][]byte {
	if m != nil {
		return m.Entries
	}
	return nil
}

// Request and response shared structure for hexalog
type ReqResp struct {
	// ID is based on the request/response
	ID      []byte          `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Entry   *Entry          `protobuf:"bytes,2,opt,name=Entry" json:"Entry,omitempty"`
	Options *RequestOptions `protobuf:"bytes,3,opt,name=Options" json:"Options,omitempty"`
}

func (m *ReqResp) Reset()                    { *m = ReqResp{} }
func (m *ReqResp) String() string            { return proto.CompactTextString(m) }
func (*ReqResp) ProtoMessage()               {}
func (*ReqResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReqResp) GetID() []byte {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *ReqResp) GetEntry() *Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *ReqResp) GetOptions() *RequestOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

// Hexalog request options
type RequestOptions struct {
	// Index of the source in the PeerSet.  This is set internally by the log
	SourceIndex int32 `protobuf:"varint,1,opt,name=SourceIndex" json:"SourceIndex,omitempty"`
	// Set of peers for the request.
	PeerSet []*hexaring.Location `protobuf:"bytes,2,rep,name=PeerSet" json:"PeerSet,omitempty"`
	// Number of times to retry for a given request
	Retries int32 `protobuf:"varint,3,opt,name=Retries" json:"Retries,omitempty"`
}

func (m *RequestOptions) Reset()                    { *m = RequestOptions{} }
func (m *RequestOptions) String() string            { return proto.CompactTextString(m) }
func (*RequestOptions) ProtoMessage()               {}
func (*RequestOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RequestOptions) GetSourceIndex() int32 {
	if m != nil {
		return m.SourceIndex
	}
	return 0
}

func (m *RequestOptions) GetPeerSet() []*hexaring.Location {
	if m != nil {
		return m.PeerSet
	}
	return nil
}

func (m *RequestOptions) GetRetries() int32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

func init() {
	proto.RegisterType((*Entry)(nil), "hexatype.Entry")
	proto.RegisterType((*KeylogIndex)(nil), "hexatype.KeylogIndex")
	proto.RegisterType((*ReqResp)(nil), "hexatype.ReqResp")
	proto.RegisterType((*RequestOptions)(nil), "hexatype.RequestOptions")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x51, 0xdd, 0x4a, 0xf3, 0x40,
	0x10, 0x25, 0x3f, 0x6d, 0xfa, 0x4d, 0xfa, 0x55, 0xd9, 0x8b, 0xb2, 0x14, 0x2f, 0x42, 0x40, 0x08,
	0x28, 0x29, 0xc4, 0x57, 0xa8, 0x60, 0xa9, 0x62, 0xd9, 0xfa, 0x02, 0x69, 0x1c, 0xd2, 0xa5, 0x6d,
	0x36, 0xdd, 0xdd, 0x48, 0xe3, 0x8d, 0xaf, 0x2e, 0x59, 0x13, 0x63, 0xef, 0xe6, 0x9c, 0x9d, 0x39,
	0x67, 0xcf, 0x0c, 0xf8, 0xba, 0x2e, 0x51, 0xc5, 0xa5, 0x14, 0x5a, 0x90, 0xd1, 0x0e, 0xcf, 0x69,
	0x43, 0xcc, 0xee, 0x72, 0xae, 0x77, 0xd5, 0x36, 0xce, 0xc4, 0x71, 0xde, 0x90, 0xdb, 0x83, 0xc8,
	0xf6, 0xa6, 0x92, 0xbc, 0xc8, 0xe7, 0x4a, 0xcb, 0x2a, 0xd3, 0xed, 0x58, 0xf8, 0x05, 0x83, 0xc7,
	0x42, 0xcb, 0x9a, 0xcc, 0x60, 0xb4, 0x96, 0xf8, 0xc1, 0x45, 0xa5, 0xa8, 0x15, 0x58, 0xd1, 0x98,
	0xfd, 0x62, 0x72, 0x03, 0xff, 0xde, 0xf8, 0x11, 0x95, 0x4e, 0x8f, 0x25, 0xb5, 0x03, 0x2b, 0x72,
	0x59, 0x4f, 0x90, 0x29, 0x0c, 0x9f, 0x90, 0xe7, 0x3b, 0x4d, 0x9d, 0xc0, 0x8a, 0xfe, 0xb3, 0x16,
	0x91, 0x6b, 0x70, 0x56, 0x58, 0x53, 0xd7, 0x88, 0x35, 0x25, 0x21, 0xe0, 0x2e, 0x52, 0x9d, 0xd2,
	0x81, 0xa1, 0x4c, 0x1d, 0x72, 0xf0, 0x57, 0x58, 0x1f, 0x44, 0xbe, 0x2c, 0xde, 0xf1, 0xdc, 0x0d,
	0x59, 0xfd, 0x50, 0x2f, 0x6f, 0x5f, 0xc8, 0x4f, 0x61, 0xf8, 0x92, 0xca, 0x3d, 0x4a, 0x63, 0x3b,
	0x66, 0x2d, 0x22, 0x14, 0xbc, 0x26, 0x11, 0x47, 0x45, 0xdd, 0xc0, 0x89, 0xc6, 0xac, 0x83, 0xa1,
	0x06, 0x8f, 0xe1, 0x89, 0xa1, 0x2a, 0xc9, 0x04, 0xec, 0xe5, 0xa2, 0x75, 0xb1, 0x97, 0x0b, 0x72,
	0xdb, 0xae, 0xc1, 0x78, 0xf8, 0xc9, 0x55, 0xdc, 0x6d, 0x33, 0x36, 0x34, 0x6b, 0x97, 0x94, 0x80,
	0xf7, 0x5a, 0x6a, 0x2e, 0x0a, 0x65, 0x4c, 0xfd, 0x84, 0xf6, 0x8d, 0x0c, 0x4f, 0x15, 0x2a, 0xdd,
	0xbe, 0xb3, 0xae, 0x31, 0xfc, 0x84, 0xc9, 0xe5, 0x13, 0x09, 0xc0, 0xdf, 0x88, 0x4a, 0x66, 0x68,
	0x22, 0x9b, 0x5f, 0x0c, 0xd8, 0x5f, 0x8a, 0xdc, 0x83, 0xb7, 0x46, 0x94, 0x1b, 0x6c, 0x42, 0x3b,
	0x91, 0x9f, 0x90, 0xb8, 0xbb, 0x5f, 0xfc, 0x2c, 0xb2, 0xb4, 0xd1, 0x61, 0x5d, 0x4b, 0x93, 0x98,
	0xe1, 0x4f, 0x62, 0xc7, 0x68, 0x75, 0x70, 0x3b, 0x34, 0x47, 0x7e, 0xf8, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0x4a, 0xf0, 0xe9, 0x05, 0x2a, 0x02, 0x00, 0x00,
}
